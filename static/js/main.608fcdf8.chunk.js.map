{"version":3,"sources":["app/toDo/actions.js","app/toDo/asyncActions.js","ToDoButton.js","ToDoTextField.js","SingleToDo.js","App.js","InputToDoForm.js","ToDoCounter.js","DeleteCompleted.js","FilterList.js","Main.js","app/store.js","app/toDo/reducer.js","index.js"],"names":["GET_TODOS","DELETE_TODO","UPDATE_TODO_STATUS","ADD_NEW_TODO","DELETE_COMPLETED_TODOS","MARK_ALL_COMPLETE","_deleteTodos","toDoID","type","_updateTodoStatus","updatedToDo","_addNewToDo","newToDo","_markAllComplete","toDoList","updateTodoStatus","dispatch","a","axios","put","id","console","log","ToDoButton","itemID","buttonClassName","reducerAction","textToDisplay","className","onClick","ToDoTextField","toDoItem","useDispatch","defaultContent","content","useState","isEditing","setIsEditing","setContent","value","onChange","ev","target","onKeyDown","key","preventDefault","stopPropagation","handleKeyDown","onDoubleClick","SingleToDo","itemToDo","isDone","showDelete","setShowDelete","onMouseEnter","onMouseLeave","delete","App","length","map","InputToDoForm","setNewToDo","handleSubmit","newToDoText","post","data","forEach","toDo","err","markAllComplete","onSubmit","ToDoCounter","numTodos","setNumTodos","useEffect","reduce","acc","ele","DeleteCompleted","push","clearCompletedToDos","FilterList","setFilterdList","setIsFiltering","filterListByTerm","filterValue","filterList","filter","Main","useSelector","state","toDos","isFiltering","filterdList","get","toDoData","reducer","combineReducers","action","sort","b","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.608fcdf8.chunk.js","sourcesContent":["export const GET_TODOS = \"GET_TODOS\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO_STATUS = \"UPDATE_TODO_STATUS\";\r\nexport const ADD_NEW_TODO = \"ADD_NEW_TODO\";\r\nexport const DELETE_COMPLETED_TODOS = \"DELETE_COMPLETED_TODOS\";\r\nexport const MARK_ALL_COMPLETE = \"MARK_ALL_COMPLETE\";\r\n\r\n\r\nexport const _getTodos = (toDoData) =>{\r\n    return {\r\n        type: GET_TODOS,\r\n        toDoData\r\n    };\r\n};\r\n\r\nexport const _deleteTodos = (toDoID) =>{\r\n    return {\r\n        type: DELETE_TODO,\r\n        toDoID\r\n    };\r\n};\r\n\r\nexport const _updateTodoStatus = (toDoID,updatedToDo) =>{\r\n    return {\r\n        type: UPDATE_TODO_STATUS,\r\n        toDoID,\r\n        updatedToDo\r\n    };\r\n};\r\n\r\nexport const _addNewToDo = (newToDo) =>{\r\n    return {\r\n        type : ADD_NEW_TODO,\r\n        newToDo\r\n    };\r\n};\r\n\r\nexport const _deleteCompletedTodos = () =>{\r\n    return {\r\n        type: DELETE_COMPLETED_TODOS\r\n    };\r\n};\r\n\r\nexport const _markAllComplete = (toDoList) =>{\r\n    return{\r\n        type: MARK_ALL_COMPLETE,\r\n        toDoList\r\n    };\r\n};","import axios from 'axios';\r\nimport { \r\n    _getTodos, \r\n    _deleteTodos, \r\n    _updateTodoStatus, \r\n    _addNewToDo, \r\n    _deleteCompletedTodos,\r\n    _markAllComplete\r\n} from './actions'\r\n\r\nexport const getTodos = () =>{\r\n    return async(dispatch) =>{\r\n        try{\r\n            const { data } = await axios.get(`https://halo-interview-challenge.herokuapp.com/todos`);\r\n            dispatch(_getTodos(data));\r\n        }catch(err){\r\n            console.log(\"error in todo reducer, getToDos\", err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (toDoID) =>{\r\n    return async(dispatch) =>{\r\n        try{\r\n            await axios.delete(`https://halo-interview-challenge.herokuapp.com/todos/${toDoID}`)\r\n            dispatch(_deleteTodos(toDoID))\r\n        }catch(err){\r\n            console.log(\"error in todo reducer, deleteTo\", err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateTodoStatus = (updatedToDo) =>{\r\n    return async(dispatch)=>{\r\n        try{\r\n            await axios.put(`https://halo-interview-challenge.herokuapp.com/todos/${updatedToDo.id}`,updatedToDo);\r\n            dispatch(_updateTodoStatus(updatedToDo.id,updatedToDo));\r\n        }catch(err){\r\n            console.log(\"error in todo reducer, updateTodoStatus\", err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewTodo = (newToDoText) =>{\r\n    return async(dispatch)=>{\r\n        try{\r\n            const newToDo = {\r\n                content:newToDoText,\r\n                isDone:false\r\n            };\r\n\r\n            const { data } = await axios.post(`https://halo-interview-challenge.herokuapp.com/todos/`,newToDo);\r\n            dispatch(_addNewToDo(data));\r\n        }catch(err){\r\n            console.log(\"error in todo reducer, addNewTodo\", err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCompletedToDos = (toDoList) =>{\r\n    return async(dispatch)=>{\r\n        try{\r\n            const toDosToDelete = toDoList.reduce((acc,toDo)=>{\r\n                if(toDo.isDone){\r\n                    acc.push(toDo.id);\r\n                }\r\n                return acc;\r\n            },[])\r\n\r\n            toDosToDelete.forEach(async toDoID=>await axios.delete(`https://halo-interview-challenge.herokuapp.com/todos/${toDoID}`));\r\n\r\n            dispatch(_deleteCompletedTodos());\r\n        }catch(err){\r\n            console.log(\"error in todo reducer, clearCompletedToDos\", err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const markAllComplete = (toDoList) =>{\r\n    return async(dispatch)=>{\r\n        try{\r\n            toDoList.forEach(async toDo=>{\r\n                toDo.isDone = true;\r\n                await axios.put(`https://halo-interview-challenge.herokuapp.com/todos/${toDo.id}`,toDo)\r\n            })\r\n            console.log(toDoList)\r\n            dispatch(_markAllComplete(toDoList))\r\n        }catch(err){\r\n            console.log(\"error in todo reducer, markAllComplete\", err)\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nconst ToDoButton = ({\r\n    itemID,\r\n    buttonClassName,\r\n    reducerAction,\r\n    textToDisplay=\"\"\r\n}) =>{\r\n\r\n    return(\r\n        <div className={buttonClassName}>\r\n            <button onClick={()=>reducerAction()}>{textToDisplay}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoButton;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateTodoStatus } from './app/actions';\r\n\r\nconst ToDoTextField = ({toDoItem}) =>{\r\n    \r\n    const dispatch = useDispatch();\r\n    const defaultContent = toDoItem.content\r\n    const [ isEditing, setIsEditing ] = useState(false);\r\n    const [ content, setContent ] = useState(defaultContent);\r\n\r\n    const handleKeyDown = (ev) =>{\r\n        if(ev.key === \"Enter\"){\r\n            const updatedToDo = toDoItem;\r\n            updatedToDo.content = ev.target.value;\r\n            dispatch(updateTodoStatus(updatedToDo));\r\n            setIsEditing(false);\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n        }\r\n        if(ev.key === \"Escape\"){\r\n            setIsEditing(false);\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n        }\r\n    }\r\n\r\n    if(!isEditing){\r\n        return(\r\n            <div onDoubleClick={()=>setIsEditing(true)}>\r\n                {content}\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <input\r\n                type='text'\r\n                value={content}\r\n                onChange={(ev)=>setContent(ev.target.value)}\r\n                onKeyDown={(ev)=>handleKeyDown(ev)}\r\n            />\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport default ToDoTextField;","import React, {useState} from 'react';\r\nimport ToDoButton from './ToDoButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTodo,updateTodoStatus } from './app/actions';\r\nimport ToDoTextField from './ToDoTextField';\r\nimport './scss_styles/SingleToDo.scss';\r\n\r\nconst SingleToDo = ({itemToDo}) =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const { id,isDone } = itemToDo;\r\n    const [showDelete, setShowDelete] = useState('hide')\r\n\r\n    return (\r\n        <div \r\n            className={`singletodo single--todo--${isDone?'completed':'uncompleted'}`}\r\n            onMouseEnter={()=>setShowDelete('show')}\r\n            onMouseLeave={()=>setShowDelete('hide')}\r\n        >\r\n            <ToDoButton \r\n                itemID={id} \r\n                buttonClassName={`button__marker buttonMarked--${isDone?'completed':'uncompleted'}`}\r\n                reducerAction={()=>{\r\n                    const updatedToDo = itemToDo;\r\n                    updatedToDo.isDone = !isDone;\r\n                    dispatch(updateTodoStatus(updatedToDo))\r\n                }}\r\n                textToDisplay=\"a\"\r\n            />\r\n\r\n            <ToDoTextField toDoItem={itemToDo} />\r\n\r\n            <ToDoButton \r\n                itemID={id} \r\n                buttonClassName={`button__delete__toDo button--delete--${showDelete}`}\r\n                reducerAction={()=>dispatch(deleteTodo(id))}\r\n                textToDisplay=\"X\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleToDo;","import React from 'react';\nimport SingleToDo from './SingleToDo'\nimport './scss_styles/App.scss'\n\nconst App = ({toDoList}) =>{\n  \n  if(toDoList.length>0){ \n    return(\n      <div className='todoitems'>\n        {toDoList.map(itemToDo=>{\n          return(\n            <div key={`itemToDo_${itemToDo.id}`}>\n              <SingleToDo itemToDo={itemToDo} />\n            </div>\n          )\n        })}\n      </div>\n    )\n  }else{\n    return(\n      <div>Add some todos!</div>\n    )\n  }\n}\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewTodo, markAllComplete } from './app/actions';\r\nimport \"./scss_styles/InputToDoForm.scss\";\r\n\r\nconst InputToDoForm = ({toDoList}) =>{\r\n\r\n    const [newToDo, setNewToDo] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (ev) =>{\r\n        ev.preventDefault();\r\n        dispatch(addNewTodo(newToDo));\r\n        setNewToDo('');\r\n    }\r\n\r\n    return(\r\n        <div className=\"newtodosinput\">\r\n            {toDoList.length>0 ? \r\n                <button\r\n                    onClick={()=>dispatch(markAllComplete(toDoList))}\r\n                >\r\n                    V\r\n                </button>\r\n            :\r\n                <></>\r\n            }\r\n            <form onSubmit={(ev)=>handleSubmit(ev)} >\r\n                <input \r\n                    type=\"text\"\r\n                    value={newToDo}\r\n                    onChange={(ev)=>setNewToDo(ev.target.value)}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputToDoForm;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ToDoCounter = ({numTodos, setNumTodos, toDoList}) =>{\r\n    \r\n    useEffect(()=>{\r\n        setNumTodos(toDoList.reduce((acc,ele)=>{\r\n            if(!ele.isDone){\r\n                acc++\r\n            }\r\n            return acc;\r\n        },0))\r\n    },[toDoList])\r\n\r\n    return(\r\n        <div>\r\n            {numTodos} items left\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoCounter;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearCompletedToDos } from './app/actions';\r\nimport './scss_styles/DeleteCompleted.scss'\r\n\r\nconst DeleteCompleted = ({numTodos, toDoList}) =>{\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    if(numTodos!==toDoList.length){\r\n        return(\r\n            <div>\r\n                <button onClick={()=>dispatch(clearCompletedToDos(toDoList))}>\r\n                    Clear Completed\r\n                </button>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className='delete__completed__placeholder'>\r\n                Clear Completed\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default DeleteCompleted;","import React, {useState} from 'react';\r\nimport ToDoCounter from './ToDoCounter';\r\nimport DeleteCompleted from './DeleteCompleted';\r\nimport './scss_styles/FilterList.scss'\r\n\r\nconst FilterList = ({toDoList,setFilterdList,setIsFiltering}) =>{\r\n\r\n    const [numTodos, setNumTodos] = useState(0);\r\n\r\n    const filterListByTerm = (filterValue) =>{\r\n        if(filterValue==='Active'){\r\n            setFilterdList(filterList(false));\r\n            setIsFiltering(true);\r\n        }else if(filterValue==='Completed'){\r\n            setFilterdList(filterList(true));\r\n            setIsFiltering(true);\r\n        }else{\r\n            setIsFiltering(false);\r\n        }\r\n    }\r\n\r\n    const filterList = (filterValue) =>{\r\n        return toDoList.filter(ele=>ele.isDone===filterValue);\r\n    }\r\n    return(\r\n        <div className='filterList'>\r\n            <div>\r\n                <ToDoCounter\r\n                    numTodos={numTodos}\r\n                    setNumTodos={setNumTodos}\r\n                    toDoList={toDoList} />\r\n            </div> \r\n            <div>\r\n                <button onClick={()=>filterListByTerm('All')}>All</button>\r\n                <button onClick={()=>filterListByTerm('Active')}>Active</button>\r\n                <button onClick={()=>filterListByTerm('Completed')}>Completed</button>\r\n            </div>\r\n            <div>\r\n                <DeleteCompleted \r\n                    numTodos={numTodos}\r\n                    toDoList={toDoList} />    \r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterList;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getTodos } from './app/actions'\r\nimport App from './App'\r\nimport InputToDoForm  from './InputToDoForm'\r\nimport FilterList from './FilterList'\r\nimport './scss_styles/Main.scss';\r\n\r\nconst Main = () =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const toDoList = useSelector(state=>state.toDos);\r\n    const [isFiltering, setIsFiltering] = useState(false)\r\n    const [filterdList, setFilterdList] = useState([])\r\n    useEffect(()=>{\r\n        dispatch(getTodos())\r\n    },[])\r\n    \r\n  return(\r\n    <>\r\n        <h1>todos</h1>\r\n        <div className=\"mainscreen\">\r\n            <InputToDoForm toDoList={toDoList}/>\r\n            {isFiltering ? <App toDoList={filterdList} /> : <App toDoList={toDoList} />}\r\n            <FilterList toDoList={toDoList} setFilterdList={setFilterdList} setIsFiltering={setIsFiltering}/>\r\n        </div>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default Main;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { toDoReducer } from './reducers';\n\nconst reducer = combineReducers({\n  toDos : toDoReducer\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware,createLogger({ collapsed:true}))\n);\n\nexport const store = createStore(reducer,middleware);\n","import { \r\n    GET_TODOS, DELETE_TODO, \r\n    UPDATE_TODO_STATUS, \r\n    ADD_NEW_TODO,\r\n    DELETE_COMPLETED_TODOS, \r\n    MARK_ALL_COMPLETE\r\n} from './actions'\r\n\r\nexport const toDoReducer = (state=[], action) =>{\r\n    switch(action.type){\r\n        case GET_TODOS:\r\n            return action.toDoData.sort((a,b)=>a.id>b.id);\r\n        case DELETE_TODO:\r\n            return state.filter(ele=>ele.id !== action.toDoID);\r\n        case UPDATE_TODO_STATUS:\r\n            return state.reduce((acc,ele)=>{\r\n                if(ele.id===action.toDoID){\r\n                    acc.push(action.updatedToDo);\r\n                }else{\r\n                    acc.push(ele);   \r\n                }\r\n                return acc;\r\n            },[])\r\n        case ADD_NEW_TODO: \r\n            return [...state,action.newToDo];\r\n        case DELETE_COMPLETED_TODOS:\r\n            return state.filter(ele=>!ele.isDone);\r\n        case MARK_ALL_COMPLETE:\r\n            return [...action.toDoList];\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}